{
    "version": "https://jsonfeed.org/version/1",
    "title": "{{ site.title | xml_escape }}",
    "description": {{ site.description | jsonify }},
    "home_page_url": "{{ "/" | absolute_url }}",
    "feed_url": "{{ page.url | absolute_url }}",{% if page.redirect.from %}
    "redirect_from": "{{ page.redirect.from | absolute_url }}",{% endif %}
    "user_comment": "This feed allows you to read the skema from this site in any feed readers that support JSON-Feed format.",
    "items": [{% comment %} assign the required variables {% endcomment %}{% assign my_atributs = "weight, title, next, content, output, previous, relative_path, id, collection, excerpt, categories, ext, layout, tags, path, url, draft, slug" | split:", " %}{% assign my_size = 2 %}{% assign my_tab = "    " %}{% assign my_base = "_feeds/section" %}{% assign my_skema = my_base | remove_first: "_" |append: "/skema" %}{% assign my_path = "" | split: "," %}{% assign feeds = site.feeds | sort:0 %}{% comment %} get current size of json {% endcomment %}{% for feed in feeds %}{% assign my_split = feed.path | split: "/" %}{% assign size = my_split | size %}{% if size > my_size %}{% assign my_path = my_path | push:size %}{% assign my_size = size %}{% endif %}{% endfor %}{% comment %} sort the weight of json items {% endcomment %}{% assign feeds = site.feeds | sort: 'weight' %}{% assign my_paths = "" | split: "," %}{% for my_size in my_path reversed %}{% for feed in feeds %}{% assign my_dir = feed.path | split: "/" | pop | join: "/" %}{% unless my_dir == my_base %}{% assign my_split = feed.path | split: "/" %}{% assign size = my_split | size %}{% if size == my_size %}{% assign my_paths = my_paths | push:feed %}{% endif %}{% endunless %}{% endfor %}{% endfor %}{% assign my_captures = "" | split: "," %}{% for my_feed in my_paths %}{% assign my_split = my_feed.path | split: "/" %}{% assign my_path_size = my_split | size %}{% assign my_part = my_split | size | minus:2 %}{% assign my_size = my_split | size | times:2 | minus:4 %}{% assign my_dir = my_split[my_part] | prepend: "/" | append: "/" %}{% assign my_title = my_feed.title | downcase | prepend: my_dir | append: "/" %}{% assign my_index = "" | split: "," %}{% for my_push in my_paths %}{% assign my_num = my_push.path | split: "/" | size | minus:my_path_size %}{% if my_num == 1 and my_push.path contains my_title %}{% assign my_index = my_index | push:forloop.index0 %}{% endif %}{% endfor %}{% comment %} capture the json items {% endcomment %}{% capture my_capture %}
{% include feeds.json %}{% for i in (1..my_size) %}{{ my_tab }}{% endfor %}}{% endcapture %}{% assign my_captures =  my_captures | push:my_capture %}{% endfor %}{% assign my_feeds = "" | split: "," %}{% for feed in feeds %}{% assign my_dir = feed.path | split: "/" | pop | join: "/" %}{% if my_dir == my_base %}{% assign my_feeds = my_feeds | push:feed %}{% endif %}{% endfor %}{% for my_feed in my_feeds %}{% assign my_title = my_feed.title | downcase | prepend: "/" | prepend: my_base | append: "/" %}{% assign my_index = "" | split: "," %}{% for my_path in my_paths %}{% assign my_split = my_path.path | split: "/" | size %}{% if my_split == 4 and my_path.path contains my_title %}{% assign my_index = my_index | push:forloop.index0 %}{% endif %}{% endfor %}{% assign my_size = 2 %} 
{% include feeds.json %}{{ my_tab }}{{ my_tab }}}{% unless forloop.last %},{% endunless %}{% endfor %}
{{ my_tab }}]
}